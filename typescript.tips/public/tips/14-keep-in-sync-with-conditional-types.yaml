title: Keep in sync with conditional types
description: You can create types from types to make sure they remain in sync.
badCode: |
  type Role = 'ADMIN' | 'MEMBER' | 'VISITOR'
  type Unprivileged = 'MEMBER' | 'VISITOR'

  // ⛔️ Need to add unprivileged roles to both
goodCode: |
  type AdminRole = 'ADMIN'
  type Role = AdminRole | 'MEMBER' | 'VISITOR'

  type RemoveAdmin<R extends Role> =
    R extends AdminRole ? never : R

  type Unprivileged = RemoveAdmin<Role>
