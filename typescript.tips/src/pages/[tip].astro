---
import Layout from '../layouts/Layout.astro';
import Tip from '../components/Tip.astro';

import fs from 'fs';
import { parse } from 'yaml';

export async function getStaticPaths() {
  const slugFrom = (filename: string): string => filename.split("-").slice(1).join("-").split(".")[0];
  const path = (filename: string): string => `/${encodeURIComponent(slugFrom(filename))}/`;
  const at = <T>(i: number, xs: T[]): T => xs.at(i % xs.length) as T;
  const tips = fs
    .readdirSync('./tips')
    .sort((a, b) => Number(a.split("-")[0]) - Number(b.split("-")[0]))
  const pathsByIndex = tips.map((filename) => path(filename));

  return tips
    .map((filename, i, filenames) => {
      const yaml = fs.readFileSync(`./tips/${filename}`).toString();
      const slug = slugFrom(filename);
      const props = {
        ...parse(yaml),
        canonical: `https://typescript.tips${path(filename)}`,
        previousTipPath: path(at(i - 1, filenames)),
        nextTipPath: path(at(i + 1, filenames)),
        pathsByIndex,
      };
      return { params: { tip: slug }, props };
    });
}

const { title, description, canonical } = Astro.props;
---

<Layout title={`${title} | TypeScript Tips`} description={description} canonical={canonical}>
  <Tip {...Astro.props} />
</Layout>
